/* 
  1. animation-name : 애니메이션 keyframes와 연결할 이름
  2. animation-delay : 애니메이션 실행을 지정 시간동안 지연시킴
  3. animation-fill-mode : 애니메이션 실행 후 속성이 지속되게 함(forwards 적용시)
  4. animation-iteration-count : 애니메이션 실행 횟수 지정
  5. animation-direction : 애니메이션 변화 후 변화 이전으로 자동 계산하여 실행(alternate 적용시)
  6. animation-duration : 애니메이션 지속 시간 지정
*/

.outer {
  width: 400px;
  height: 400px;
  border: 1px solid;

  display: flex;
  align-items: center;
  justify-content: center;
}

.inner {
  width: 200px;
  height: 200px;
  background-color: rgba(50, 187, 187, 0.619);
  _animation-name: change-element;
  _animation-duration: 1s;
  _animation-delay: 1s;
  _animation-fill-mode: forwards;
  _animation-iteration-count: 3;
  _animation-direction: alternate;
  _animation-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);
  animation: change-element 1s cubic-bezier(0.075, 0.82, 0.165, 1) 3 alternate
    forwards;
}

@keyframes change-element {
  0% {
    width: 200px;
    height: 200px;
    background-color: rgba(50, 187, 187, 0.619);
  }
  100% {
    width: 400px;
    height: 400px;
    background-color: rgb(52, 86, 87);
  }
}

.ham {
  width: 100px;
  height: 100px;
  border: 1px solid;
  background-color: #555;

  display: flex;
  justify-content: center;
  align-items: center;

  margin-top: 20px;
}

.fa-solid {
  font-size: 30px;
  color: white;
  animation: hamburgerBar 0.5s infinite alternate;
}

@keyframes hamburgerBar {
  100% {
    transform: scale(2);
    opacity: 0.3; /* opactiy : 투명도이며, 값이 0에 가까울수록 투명하다 */
  }
}
